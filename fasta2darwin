#!/bin/bash

DARWIN_PATH=$(dirname $0)

pfile="alf-params.drw"
wdir="./"

if [ $# -lt 1 ]
then
    echo "usage: fasta2darwin <fasta file> [<5 letter code>] [--dna]"
    exit 0
fi

if [ $# -ge 2 -a  "$2" != "--dna" ]
then
    code=$2
else
    code=ROOTG
fi

if [[ "$@" = *--dna* ]]
then
    dna="true"
else
    dna="false"
fi

echo "
      Set(printgc=false):
      fasta := '$1':
      dir := '$(dirname $1)':
      gname := '$(basename $1)':
      gname := gname[1..SearchString('.',gname)]: 
      input := ReadFastaWithNames('$1'):
      code := '$code':
      dna := ${dna}:

      OpenWriting(dir.'/'.gname.'.db');
      printf('<5LETTERNAME>%s</5LETTERNAME>\n', code);
      print('<OS>Unknown</OS>');
      print('<KINGDOM>Unknown</KINGDOM>');
  
      if length(input[1]) <> length(input[2]) then
          OpenWriting(previous);
          error('Fasta DB length missmatch'):
          quit;
      fi;
      for i to length(input[1]) do
          s := uppercase(input[1,i]):
          # minimal check of sequences
          for j to length(s) do
              aa := AToInt(s[j]);
              if aa < 1 or aa > 21 then
                  OpenWriting(previous);
                  error(printf('Unknown character: %s (in %s, %s)',
                      s[j], input[2,i], gname));
                  quit;
              fi;
          od;
          if dna then
              printf('<E><ID>%s</ID><SEQ>AAA</SEQ><DNA>%s</DNA></E>\n',
                     ReplaceString('\t','',input[2,i]) , s);
          else
              printf('<E><ID>%s</ID><SEQ>%s</SEQ></E>\n',
                     ReplaceString('\t','',input[2,i]) , s);
          fi
      od:
      OpenWriting(previous);
      done:" | $DARWIN_PATH/alfdarwin 

